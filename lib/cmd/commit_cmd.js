const inquirer=require("inquirer"),{getStatus,gitPush,getUnpushedCommits,gitAdd}=require("../git/git"),path=require("path"),standardVersion=require("standard-version"),bootstrap=require("commitizen/dist/cli/git-cz").bootstrap,print=require("../util/print"),{formatCmd}=require("./format_cmd");function userCommit(){return bootstrap({cliPath:path.join(__dirname,"../node_modules/commitizen"),// this is new
config:{path:path.resolve(__dirname,"../3rd/cz-conventional-changelog")}},"")}async function gitCommit(){await formatCmd();// const git = await isGitRepo()
// console.log('git', git)
const a=await getStatus(),b=await getUnpushedCommits();if(b&&console.log(` (${b.split("\n").filter(a=>a).length} commits unpushed)`),Array.isArray(a)){const b=await inquirer.prompt({type:"checkbox",name:"files",message:"\u8BF7\u9009\u62E9\u8981\u63D0\u4EA4\u7684\u6587\u4EF6:",choices:a.map(a=>({name:a})),pageSize:20});if(b&&b.files&&0<b.files.length){// add files
const c=b.files.length===a.length?".":b.files.join(" "),d=await gitAdd(c);return 0===d.code&&(await userCommit()),!0}}}async function gitPushCmd(){// push
const a=await getUnpushedCommits();if(a){const a=await inquirer.prompt({type:"confirm",name:"pushCommits",message:"Do you want to push now?",default:!1});a.pushCommits&&(await gitPush("-u"))}}async function generateChangeLog(){standardVersion({noVerify:!0,infile:"docs/CHANGELOG.md",silent:!0}).then(()=>{// standard-version is done
print.info("changelog \u751F\u6210\u6210\u529F\uFF0C\u4F4D\u4E8Edocs/CHANGELOG.md\u6587\u4EF6\u4E2D")}).catch(a=>{print.error(`standard-version failed with message: ${a.message}`)})}module.exports={gitCommit,gitPushCmd,generateChangeLog};