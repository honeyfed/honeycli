/**
 * This module is based on webpack. It provides development and deploy features.
 */const{loadJson,doCmd}=require("./utils"),print=require("./print"),_=require("lodash"),rmcb=require("rimraf"),util=require("util"),path=require("path"),{generateWebpackConfig}=require("./webpack/tool"),webpack=require("webpack"),rm=util.promisify(rmcb),defaultConfig={src:"./src",dist:"./dist",entry:"index.js",template:"index.html",static:"./static"};async function buildCmd(){try{await doCmd("npm i --save core-js@3"),await doCmd("npm i")}catch(a){print.error(a)}const a=loadJson("./package.json"),b={};_.merge(b,defaultConfig),a&&a.honeyConfig?_.merge(b,a.honeyConfig):print.info("no config found"),b.src=path.resolve(process.cwd(),b.src),b.dist=path.resolve(process.cwd(),b.dist);try{await rm(b.dist);//build
const a=generateWebpackConfig(b);webpack(a,(a,b)=>{if(a)throw a;process.stdout.write(b.toString({colors:!0,modules:!1,children:!1,// If you are using ts-loader, setting this to true will make TypeScript errors show up during build.
chunks:!1,chunkModules:!1})+"\n\n"),b.hasErrors()&&(print.error("  Build failed with errors.\n"),process.exit(1)),print.info("  Build complete.\n")})}catch(a){print.error(a)}}module.exports={buildCmd};