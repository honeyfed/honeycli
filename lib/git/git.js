const spawn=require("cross-spawn"),{GitError}=require("../util/errors"),{doCmd}=require("../util/utils"),print=require("../util/print"),root=process.cwd(),isWin="win32"===process.platform;// git 拷贝操作
async function gitClone(a,b=""){const c=await doCmd("git",["clone",a,b,"--depth",1],{stdio:"inherit"});return 0===c.code?c.code:void new GitError("git clone failed")}// 判断是否是git目录
async function isGitRepo(a){try{const b=await doCmd("git",["rev-parse","--git-dir"],{cwd:a,stdio:"inherit"});return 0===b.code}catch(a){return!1}}async function showStatus(a){await doCmd("git",["status","--short",a||"."],{cwd:root,stdio:"inherit"})}async function getStatus(a){const b=await doCmd("git",["status","--short",a||"."],{cwd:root});if(!b||!b.data)return print.info("\u5F53\u524D\u6CA1\u6709\u9700\u8981\u63D0\u4EA4\u7684\u8BB0\u5F55"),"";let c=Buffer.from(b.data);if(c=c.toString(),c.trim())return c=c.split("\n").filter(a=>a.trim()),isWin&&(c=c.map(a=>a.slice(3))),await showStatus(),c}async function gitPush(a){return await doCmd("git",["push",a||""],{cwd:root,stdio:"inherit"})}async function gitAdd(a){return await doCmd("git",["add",a],{cwd:root,stdio:"inherit"})}async function getUnpushedCommits(){const a=await doCmd("git",["cherry","-v"],{cwd:root});if(a.data){let b=Buffer.from(a.data);return b.toString()}return a.data}module.exports={gitClone,isGitRepo,getStatus,gitPush,getUnpushedCommits,gitAdd};