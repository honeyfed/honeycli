const path=require("path"),{VueLoaderPlugin}=require("vue-loader"),HtmlWebpackPlugin=require("html-webpack-plugin"),ProgressBarPlugin=require("progress-bar-webpack-plugin"),CopyWebpackPlugin=require("copy-webpack-plugin");// const UploadCdnPlugin = require('./uploadcdn.js')
function proxyConfigToDevServer(a){const b=a.dev.proxy,c={};return Array.isArray(b)&&b.length&&b.forEach(b=>{if(b.from&&b.to&&(c[b.from]={target:b.to,changeOrigin:!0,cookieDomainRewrite:"localhost"},a.dev.mock)){const d=require(path.resolve(process.cwd(),a.dev.mock));c[b.from].bypass=d}}),c}function generateWebpackConfig(a,b="production"){const c={mode:b,entry:path.resolve(a.src,a.entry),output:{path:a.dist,filename:"app.js",publicPath:"/"},resolve:{extensions:[".js",".vue",".json"],alias:{"@":a.src}},resolveLoader:{modules:[path.resolve(__dirname,"../../node_modules")]},module:{rules:[{test:/\.js$/,loader:"babel-loader",options:{cwd:path.resolve(__dirname,"../../"),presets:[["@babel/preset-env",{useBuiltIns:"usage",corejs:3,targets:"> 0.25%, not dead"}]]},exclude:/node_modules/},{test:/\.vue$/,loader:"vue-loader"},{test:/\.css$/,use:["style-loader","css-loader"]},{test:/\.less$/,use:["style-loader","css-loader","less-loader"]},{test:/\.(ttf|woff)$/,use:[{loader:"url-loader",options:{name:"fonts/[name]-[hash:6].[ext]",limit:8092,esModule:!1}}]},{test:/\.(gif|png|jpg|jpeg|svg)$/,use:[{loader:"url-loader",options:{name:"imgs/[name]-[hash:6].[ext]",limit:8092,esModule:!1}}]}]},optimization:{splitChunks:{chunks:"all"}},devtool:"production"===b?"none":"eval-source-map",devServer:{port:a.port,hot:!0,historyApiFallback:{rewrites:[{from:/.*/,to:"/index.html"}]},proxy:proxyConfigToDevServer(a)},plugins:[new VueLoaderPlugin,new HtmlWebpackPlugin({template:path.resolve(a.src,a.template)}),// new UploadCdnPlugin(),
new ProgressBarPlugin]};return a.static&&c.plugins.push(new CopyWebpackPlugin({patterns:[{from:a.static,to:a.dist}]})),c}module.exports={generateWebpackConfig};